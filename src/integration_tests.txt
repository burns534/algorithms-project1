Signature debugging
--------------------------------------
14
n: 110344682122297703000487407270560122691
n bitlength: 127
THIS IS A TEST
7b39727136e4dc97158ca440dcc0c184
32


Integration test of basic message encryption/decryption
---------------------------------------
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 1
As a public user, what would you like to do?
        1. Send an encrypted message
        2. Authenticate a digital signature
        3. Exit
Enter your choice: 1
Enter a message: topSecret
9
n: 739630114325372784873194766850669819495661212059989989897612403225366491077606902890244885648788136752481693080734740991477309603586642896940988176353289
n bitlength: 508
As a public user, what would you like to do?
        1. Send an encrypted message
        2. Authenticate a digital signature
        3. Exit
Enter your choice: 3
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 2
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 1
The following messages are available: 
        1. (length = 64)
Enter your choice: 1
Decrypted message: TOPSECRET
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 3
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 3
Bye for now!


Signature debugging
-----------------------------------
digest: b'xx\xe43\xf2\x98+\xd0\xf8H\xe4\xa4\xb9\xd1\xbaB'
validate signature
digest: 3òøHä¤¹ÑºB
Traceback (most recent call last):
  File "/Users/kyle/Documents/Programming/algorithms/algorithms-project1/src/backend.py", line 365, in <module>
    print(backend.validate_signature(1))
  File "/Users/kyle/Documents/Programming/algorithms/algorithms-project1/src/backend.py", line 280, in validate_signature
    print("test: {}".format(digest.encode('ascii')))
UnicodeEncodeError: 'ascii' codec can't encode characters in position 1-2: ordinal not in range(128)

Signature debugging - problem calculating digest on recieving end
--------------------------------
digest: b'xx\xe43\xf2\x98+\xd0\xf8H\xe4\xa4\xb9\xd1\xbaB'
validate signature
digest: 3òøHä¤¹ÑºB
test: b'3\xf2\x98+\xd0\xf8H\xe4\xa4\x00\x00\x00\xb9\xd1\xbaB'
calculated digest: }HS×¹LÊ»%¶x×°[
False



Testing Signature - Invalid Signature Properly Detected
--------------------------------------------------------
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 1
As a public user, what would you like to do?
        1. Send an encrypted message
        2. Authenticate a digital signature
        3. Exit
Enter your choice: 1
Enter a message: this is a regular unsigned message that should not be accepted as authenticated 
As a public user, what would you like to do?
        1. Send an encrypted message
        2. Authenticate a digital signature
        3. Exit
Enter your choice: 2
The following messages are available: 
        1. (length = 128)
Enter your choice: 1
Signature is invalid.
As a public user, what would you like to do?
        1. Send an encrypted message
        2. Authenticate a digital signature
        3. Exit
Enter your choice: 3
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 3
Bye for now!


Testing Signature - Attempting to decrypt signed message
-------------------------------------------------------
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 2
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 2
Enter a message: if I try to decrypt this signed message normally, the result will be very ugly 
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 1
The following messages are available: 
        1. (length = 256)
Enter your choice: 1
Oops! It looks like you tried to decrypt a signed message! Here's the output
Decrypted message: $sæe0¥æE­Àí¡f=ÓEå2á<Ìy
:8·ÑLsdá³ÕoKRóF@àöß¬ð<¹ÃìnÁ^"®ùoÎYÆg'ç[yJ]¼Ûdö¨à¹â¼Î}=B9U}b Y
     Ì§"¹QþD^¾¹CE
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 3
Please select your user type:
        1. A public user
        2. The owner of the keys
        3. Exit program
Enter your choice: 3
Bye for now!


Excerpt from Testing Multiple, Long Messages
--------------------------------
Enter your choice: 2
As the owner of the keys, what would you like to do?
        1. Decrypt a received message
        2. Digitally sign a message
        3. Exit
Enter your choice: 1
The following messages are available: 
        1. (length = 896)
        2. (length = 896)
        3. (length = 896)
        4. (length = 896)
        5. (length = 896)